Fix this code: local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

-- Create the main window
local Window = Library:CreateWindow{
    Title = "MoonHub",
    SubTitle = "By Godlike",
    TabWidth = 125,
    Size = UDim2.fromOffset(830, 525),
    Resize = true,
    MinSize = Vector2.new(470, 380),
    Acrylic = true,
    Theme = "Light",
    MinimizeKey = Enum.KeyCode.RightControl
}

-- Add Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "0" }),
    AutoWeights = Window:AddTab({ Title = "Auto Weights", Icon = "0" }),
    AutoRebirth = Window:AddTab({ Title = "Auto Rebirth", Icon = "0" }),
    AutoKill = Window:AddTab({ Title = "Auto Kill", Icon = "0" }),
    AutoRock = Window:AddTab({ Title = "Auto Rock", Icon = "0" })
}

-- Main Tab
local MainSection = Tabs.Main:CreateSection("Basic Controls")
local selectedSize = 2
local selectedSpeed = 125

-- Input for Size Changer
local InputSize = MainSection:AddInput("SizeChanger", {
    Title = "Size Changer",
    Description = "Enter Size",
    Default = "2",
    Placeholder = "Type here...",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        selectedSize = tonumber(Value) or 2
        if _G.AutoSize then
            game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", selectedSize)
        end
    end
})

-- Toggle for Auto Size
local ToggleAutoSize = Tabs.Main:CreateToggle("AutoSize", {
    Title = "Auto Set Size",
    Description = "Auto Set your chosen Size",
    Default = false,
    Callback = function(Value)
        _G.AutoSize = Value
        while _G.AutoSize do
            game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", selectedSize)
            task.wait(0.1)
        end
    end
})

-- Input for Speed Changer
local InputSpeed = Tabs.Main:CreateInput("SpeedChanger", {
    Title = "Speed Changer",
    Description = "Enter Speed",
    Default = "125",
    Placeholder = "Enter Speed",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        selectedSpeed = tonumber(Value) or 125
        local character = game.Players.LocalPlayer.Character
        if _G.AutoSpeed and character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = selectedSpeed
            end
        end
    end
})

-- Toggle for Auto Speed
local ToggleAutoSpeed = Tabs.Main:CreateToggle("AutoSpeed", {
    Title = "Auto Set Speed",
    Description = "Auto Set your chosen Speed",
    Default = false,
    Callback = function(Value)
        _G.AutoSpeed = Value
        while _G.AutoSpeed do
            local character = game.Players.LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = selectedSpeed
                end
            end
            task.wait(0.1)
        end
    end
})

-- Button actions for FREE AUTO LIFT PASS
Tabs.Main:AddButton({
    Title = "FREE AUTO LIFT PASS",
    Description = "Makes the Auto Lift Pass free",
    Callback = function()
        local gamepassFolder = game:GetService("ReplicatedStorage").gamepassIds
        local player = game.Players.LocalPlayer
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = player.ownedGamepasses
        end
    end
})

-- Button actions to Destroy Ad portal
Tabs.Main:AddButton({
    Title = "Destroy Ad portal",
    Description = "Self explanatory💀🙏",
    Callback = function()
        local part = workspace:FindFirstChild("RobloxForwardPortals")
        if part then
            part:Destroy()
        end
    end
})

-- Auto Weights Tab
local ToggleAutoWeight = Tabs.AutoWeights:CreateToggle("Auto Weights", {
    Title = "Auto Weight",
    Description = "This auto lifts the Dumbbell",
    Default = false,
    Callback = function(Value)
        _G.AutoWeight = Value
        if Value then
            local weightTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Weight")
            if weightTool then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(weightTool)
            end
        else
            local character = game.Players.LocalPlayer.Character
            local equipped = character:FindFirstChild("Weight")
            if equipped then
                equipped.Parent = game.Players.LocalPlayer.Backpack
            end
        end
        while _G.AutoWeight do
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
            task.wait(0.001)  -- Adjust wait time if necessary
        end
    end
})

-- Function to create Auto Toggle
local function createAutoToggle(name, toolName)
    return Tabs.AutoWeights:CreateToggle(name, {
        Title = name,
        Description = "Automatically performs " .. name,
        Callback = function(Value)
            _G["Auto" .. toolName] = Value
            if Value then
                local tool = game.Players.LocalPlayer.Backpack:FindFirstChild(toolName)
                if tool then
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
                end
            else
                local character = game.Players.LocalPlayer.Character
                local equipped = character:FindFirstChild(toolName)
                if equipped then
                    equipped.Parent = game.Players.LocalPlayer.Backpack
                end
            end
            while _G["Auto" .. toolName] do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.001)  -- Adjust wait time if necessary
            end
        end
    })
end

-- Create auto toggles for exercises
createAutoToggle("Auto Pushups", "Pushups")
createAutoToggle("Auto Situps", "Situps")
createAutoToggle("Auto Handstands", "Handstands")

-- Auto Rebirth Tab
local targetRebirthValue = 1
local targetInput = Tabs.AutoRebirth:CreateInput("TargetRebirth", {
    Title = "Rebirth Amount",
    Description = "Enter your target rebirth goal",
    Default = "1",
    Placeholder = "Enter amount...",
    Numeric = true,
    Finished = true,
    Callback = function(Value)
        targetRebirthValue = tonumber(Value) or 1
    end
})

local targetToggle = Tabs.AutoRebirth:CreateToggle("AutoRebirthTarget", {
    Title = "Auto Rebirth (Target point)",
    Description = "Automatically rebirth until target is reached",
    Default = false,
    Callback = function(Value)
        if Value then
            task.spawn(function()
                while true do
                    if game.Players.LocalPlayer.leaderstats and game.Players.LocalPlayer.leaderstats.Rebirths and 
                       game.Players.LocalPlayer.leaderstats.Rebirths.Value >= targetRebirthValue then
                        targetToggle:SetValue(false)
                        break
                    end
                    game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                    task.wait(0.1)
                end
            end)
        end
    end
})

-- Auto Kill Tab
local Section = Tabs.AutoKill:CreateSection("Auto Kill")
local Players = game:GetService("Players")

local function checkCharacter()
    local player = Players.LocalPlayer
    return player.Character or player.CharacterAdded:Wait()
end

local function killPlayer(target)
    local character = checkCharacter()
    if character and target.Character then
        if target.Character:FindFirstChild("HumanoidRootPart") and character:FindFirstChild("LeftHand") then
            firetouchinterest(target.Character.HumanoidRootPart, character.LeftHand, 0)
            firetouchinterest(target.Character.HumanoidRootPart, character.LeftHand, 1)
        end
    end
end

Tabs.AutoKill:AddToggle("Kill Player", {
    Title = "Start Killing",
    Default = false,
    Callback = function(v)
        getgenv().killallv2 = v
        task.spawn(function()
            while getgenv().killallv2 do
                for _, player in ipairs(Players:GetPlayers()) do
                    if player ~= Players.LocalPlayer and player.Character and 
                       player.Character:FindFirstChild("Humanoid") and 
                       player.Character.Humanoid.Health > 0 then
                        killPlayer(player)
                    end
                end
                task.wait()
            end
        end)
    end
})

local PlayerDropdown = Tabs.AutoKill:CreateDropdown("PlayerList", {
    Title = "Kill Target",
    Description = "Choose player to target",
    Values = {},
    Multi = false,
    Default = nil,
    Callback = function(Value)
        targetPlayer = string.match(Value, "(.+) |")
        print("Target set to:", targetPlayer)
    end
})

local function updatePlayerList()
    local playerInfo = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            local displayText = player.Name .. " | " .. player.DisplayName
            table.insert(playerInfo, displayText)
        end
    end
    PlayerDropdown:SetValues(playerInfo)
end

task.spawn(function()
    while true do
        updatePlayerList()
        task.wait(1)
    end
end)

Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)
updatePlayerList()

local toggleFastKill = Tabs.AutoKill:CreateToggle("Fast Kill", {
    Title = "Fast Kill",
    Description = "Increases the karma gain speed",
    Default = false,
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local punch = player.Backpack:FindFirstChild("Punch")
        local character = player.Character
        local punch1 = character and character:FindFirstChild("Punch")

        local attackTimeValue = Value and 0 or 0.35

        if punch and punch:FindFirstChild("attackTime") then
            punch.attackTime.Value = attackTimeValue
        end

        if punch1 and punch1:FindFirstChild("attackTime") then
            punch1.attackTime.Value = attackTimeValue
        end
    end
})

local toggleautopunch = Tabs.AutoKill:CreateToggle("Auto Punch", {
Title = "Auto punch",
Description = "This just auto punches. like a autoclicker",
Callback = function(Value)
_G.fastHitActive = Value
		if Value then
			local function equipAndModifyPunch()
				while _G.fastHitActive do
					local player = game.Players.LocalPlayer
					local punch = player.Backpack:FindFirstChild("Punch")
					if punch then
						punch.Parent = player.Character
						if punch:FindFirstChild("attackTime") then
							punch.attackTime.Value = 0
						end
					end
					wait(0)
				end
			end
			local function rapidPunch()
				while _G.fastHitActive do
					local player = game.Players.LocalPlayer
					player.muscleEvent:FireServer("punch", "rightHand")
					player.muscleEvent:FireServer("punch", "leftHand")
					local character = player.Character
					if character then
						local punchTool = character:FindFirstChild("Punch")
						if punchTool then
							punchTool:Activate()
						end
					end
					wait(0)
				end
			end
			coroutine.wrap(equipAndModifyPunch)()
			coroutine.wrap(rapidPunch)()
		else
			local character = game.Players.LocalPlayer.Character
			local equipped = character:FindFirstChild("Punch")
			if equipped then
				equipped.Parent = game.Players.LocalPlayer.Backpack
			end
		end
	end
})

-- Auto Rock Tab
local toggletinyrockauto = Tabs.AutoRock:CreateToggle("Auto Tiny Rock", {
    Title = "Auto Tiny Rock",
    Description = "Auto Punches Tiny Rock",
    Callback = function(Value)
        getgenv().autoFarm = Value
        while getgenv().autoFarm do
            task.wait()
            if game:GetService("Players").LocalPlayer.Durability.Value >= 0 then
                for _, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
                    if v.Name == "neededDurability" and v.Value == 0 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
                        firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
                        -- Uncomment and define `gettool()` if needed
                        -- gettool()
                    end
                end
            end
        end
    end
})

local togglefrostgym = Tabs.AutoRock:CreateToggle("FrostRock", {
Title = "Auto Frost Rock",
Description = "Auto punches Frost Rock",
Callback = function(Value)
selectrock = "Frost Gym Rock"
		getgenv().autoFarm = Value
		while getgenv().autoFarm do
			task.wait(0.001)
			if game:GetService("Players").LocalPlayer.Durability.Value >= 150000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 150000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
	end
})

local togglemysticrock = Tabs.AutoRock:CreateToggle("Mystic Rock", {
Title = "Mystic Rock",
Description = "Auto punches Mystic rock",
Callback = function(Value)
selectrock = "Mythical Gym Rock"
		getgenv().autoFarm = Value
		while getgenv().autoFarm do
			task.wait(0.001)
			if game:GetService("Players").LocalPlayer.Durability.Value >= 400000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 400000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
	end
})

local toggleeternalrock = Tabs.AutoRock:CreateToggle("Eternalrock", {
Title = "Eternal Rock",
Description = "Auto punches Eternal Rock",
Callback = function(Value)
selectrock = "Eternal Gym Rock"
		getgenv().autoFarm = Value
		while getgenv().autoFarm do
			task.wait(0.001)
			if game:GetService("Players").LocalPlayer.Durability.Value >= 750000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 750000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
	end
})

local togglelegendrock = Tabs.AutoRock:CreateToggle("Legendsrock", {
Title = "Legends Rock",
Description = "Auto punches legends rock",
Callback = function(Value)
selectrock = "Legend Gym Rock"
		getgenv().autoFarm = Value
		while getgenv().autoFarm do
			task.wait(0.001)
			if game:GetService("Players").LocalPlayer.Durability.Value >= 1000000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 1000000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
	end
})

local togglemuscleking = Tabs.AutoRock:CreateToggle("MuscleKing", {
Title = "Muscle King Rock",
Description = "Auto punches Muscle King Rock",
Callback = function(Value)
selectrock = "Muscle King Gym Rock"
		getgenv().autoFarm = Value
		while getgenv().autoFarm do
			task.wait(0.001)
			if game:GetService("Players").LocalPlayer.Durability.Value >= 5000000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 5000000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
	end
})

local togglejunglerock = Tabs.AutoRock:CreateToggle("JungleRock", {
Title = "Jungle Rock",
Description = "Auto punches jungle rock",
Callback = function(Value)
selectrock = "Ancient Jungle Rock"
		getgenv().autoFarm = Value
		while getgenv().autoFarm do
			task.wait(0.001)
			if game:GetService("Players").LocalPlayer.Durability.Value >= 10000000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 10000000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
	end
})
